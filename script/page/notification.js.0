/*
requirejs(['moment', 'sweetalert2', 'app', 'pace', 'icheck', 'select2-maxheight', 'datatables.net-fixedcolumns-bs4', 'datatables-helper', 'daterangepicker', 'form-control', 'jquery-serialize', 'editForm', 'jquery-serialize', 'jquery-validate-messages'], function(moment, swal) {
	window.moment = moment;
	window.swal = swal;
	window.toast = swal.mixin({
		toast: true,
		position: 'top-end',
		showConfirmButton: false,
		timer: 300 * 1000
	});	

	app.initialize();
});
*/
initialPage(function() {
	if (APPLICATION.data.selectedCommunityId) $('#criteria_community_id').val(APPLICATION.data.selectedCommunityId).trigger('change');
	refresh();
});

var language;

var fromDate;
var toDate;

var table;
var tableElement;

var form;
var editForm;

var criteriaForm;

var datesPicker;
var dateFormat;

function loadI18n() {
	var deferred = $.Deferred();
	if (!language) language = getPageLocale();
	$.i18n.properties({
		language: language,
		name: [APPLICATION.SETTING.defaultLanguageFileName, 'notification-message', 'organization-message', 'customer-message', 'user-message'], 
		path: APPLICATION.SETTING.defaultLanguageFilePath,
		mode: 'map',
		cache: true,
		callback: function() {
			APPLICATION.documentTitle = $.i18n.prop('notification');
			$('#title_section').text($.i18n.prop('notification'));
			
			$('#query_criteria_title').text($.i18n.prop('terms.query.criteria'));
			$('#query_result_title').text($.i18n.prop('terms.query.result'));
			$('#notification_form_title').text($.i18n.prop('notification'));
			
			$('#criteria_organization_id_label').text($.i18n.prop('terms.organization'));
			$('#criteria_user_id_label').text($.i18n.prop('user'));
			$('#date_label').text($.i18n.prop('notification.create_time'));

			$('#create_time_label').text($.i18n.prop('notification.create_time'));
			$('#send_time_label').text($.i18n.prop('notification.send_time'));
			$('#organization_name_label').text($.i18n.prop('organization.name'));
			$('#customer_name_label').text($.i18n.prop('customer.name'));
			$('#receiver_label').text($.i18n.prop('notification.receiver'));
			$('#subject_label').text($.i18n.prop('notification.subject'));
			$('#content_label').text($.i18n.prop('notification.content'));

			$('#refresh').append($.i18n.prop('operation.refresh'));
			
			deferred.resolve();
		}
	});
	return deferred.promise();
}

function initial() {
	
	"use strict";

	form = $('#notification_form');
	
	var dashedLanguage = language.replace('_', '-');
	
	var deferred = $.Deferred();
	var deferreds = [];
	
	moment.locale(dashedLanguage.toLowerCase());
	fromDate = moment().subtract(1, 'months').add(1, 'days');
	toDate = moment();
	datesPicker = createDateRangePicker($('#dates'), $('#dates_range_button'), null, null, fromDate, toDate, false, false, true);
	
	deferreds.push(createOrganizationSelect($('#criteria_organization_id'), null, $('#criteria_organization_id_container')));
	
	deferreds.push(createOrganizationSelect($('#criteria_user_id'), null, $('#criteria_user_id_container')));
	
	deferreds.push($.getScript(getDataTableTranslation(language), function() {
		tableElement = $('#table');
		table = tableElement.DataTable(
			/*
			{
			"language": getDataTablesLanguage(),
			"paging": true,
			'lengthMenu': APPLICATION.systemConfig.defaultPageLengthMenu, 
			"pageLength": APPLICATION.systemConfig.defaultPageLength,
			"lengthChange": true,
			"searching": false,
			"ordering": false,
//			"order": [[1, "asc"]],
			"info": true,
			"stateSave": true,
			//"responsive": false,
			"autoWidth": false,
			"columns": [
				{"data": "createTime", "title": $.i18n.prop('notification.create_time'), "sortable": false, "render": dataTableHelper.render.dateTimeRender, "width": 100, "className": "min-mobile-p"},
				{"data": "subject", "title": $.i18n.prop('notification.subject'), "sortable": false, "width": 100, "className": "min-mobile-p"}, 
				//{"data": "organization", "title": $.i18n.prop('organization'), "sortable": false, "render": dataTableHelper.render.aliasRender, "width": 60, "className": "min-mobile-p"},
				{"data": "customer", "title": $.i18n.prop('customer'), "sortable": false, "render": dataTableHelper.render.nameRender, "width": 60, "className": "min-mobile-p"},
				{"data": "receiver", "title": $.i18n.prop('notification.receiver'), "sortable": false, "render": dataTableHelper.render.nameRender, "width": 40, "className": "min-mobile-p"},
				//{"data": "sendTime", "title": $.i18n.prop('notification.send_time'), "sortable": false, "render": dataTableHelper.render.dateTimeRender, "width": 40, "className": "min-mobile-p"},
				//{"data": "severity", "sortable": false, "width": 40, "className": "min-mobile-p"},
				//{"data": "status", "title": $.i18n.prop('notification.status'), "sortable": false, "width": 100, "className": "min-mobile-p"}
			],
			"deferLoading": 0,
			"processing": false, 
			"serverSide": true,
			"ajax": loadTable
			*/
			getDataTableOptions({
				"columns": [
					{"data": "createTime", "title": $.i18n.prop('notification.create_time'), "sortable": false, "render": dataTableHelper.render.dateTimeRender, "width": 100, "className": "min-mobile-p"},
					{"data": "subject", "title": $.i18n.prop('notification.subject'), "sortable": false, "width": 100, "className": "min-mobile-p"}, 
					//{"data": "organization", "title": $.i18n.prop('organization'), "sortable": false, "render": dataTableHelper.render.aliasRender, "width": 60, "className": "min-mobile-p"},
					{"data": "customer", "title": $.i18n.prop('customer'), "sortable": false, "render": dataTableHelper.render.nameRender, "width": 60, "className": "min-mobile-p"},
					{"data": "receiver", "title": $.i18n.prop('notification.receiver'), "sortable": false, "render": dataTableHelper.render.nameRender, "width": 40, "className": "min-mobile-p"},
					//{"data": "sendTime", "title": $.i18n.prop('notification.send_time'), "sortable": false, "render": dataTableHelper.render.dateTimeRender, "width": 40, "className": "min-mobile-p"},
					//{"data": "severity", "sortable": false, "width": 40, "className": "min-mobile-p"},
					//{"data": "status", "title": $.i18n.prop('notification.status'), "sortable": false, "width": 100, "className": "min-mobile-p"}
					{"data": 'id', "visible": false} 
				],
				"ordering": true,
				"order": [[0, "asc"]],
				"serverSide": true,
				"ajax": loadTable
			})
		);	
	}));
	
	if (!language.startsWith('en')) deferreds.push($.getScript(getValidatorTranslation(language)));

	$.when.apply($, deferreds).done(function() {
		
		editForm = form.editForm({
			form: form,
			table: tableElement,
			dataTable: table,
			afterPopulate: function() {
				var data = editForm.formData();
				if (data.customer) $('#customer_name').val(data.customer.name);
				else $('#customer_name').val('');
				if (data.organization) $('#organization_name').val(data.organization.name);
				else $('#organization_name').val('');
			},
			save: function() {
				toast.fire({
					type: 'info', 
					title: $.i18n.prop('operation.saving') + ' ' + $.i18n.prop('operation.waiting') 
				});
				toast.close();
			}
		});

		editForm.process(CONSTANT.ACTION.INQUIRY);

		$('#refresh').on('click', refresh);
		
		return deferred.resolve();
	});
	
	return deferred.promise();
}

function loadTable(data, callback, settings) {
	if (toast) {
		toast.fire({
			type: 'info', 
			title: $.i18n.prop('operation.querying') + ' ' + $.i18n.prop('operation.waiting') 
		});
	}
	var criteria = form.serializeObject();
	criteria.fromTime = datesPicker.data('daterangepicker').startDate.format(APPLICATION.SETTING.defaultDateTimeFormat);
	criteria.toTime = datesPicker.data('daterangepicker').endDate.format(APPLICATION.SETTING.defaultDateTimeFormat);
	data.parameters = criteria;
	ajaxPostJson(URLS.NOTIFICATION.QUERY, data)
	.done(function(json) {
		if ((json) && (json.length)) {
			callback({'data': json, 'recordsTotal': json.length, 'recordsFiltered': json.length});
			if (table.data().any()) {
				tableRow = $('tbody tr:first', tableElement);
				if (tableRow) tableRow.trigger('click');
			}
		} 
		else {
			if (toast) {
				toast.fire({
					type: 'warning', 
					title: $.i18n.prop('operation.empty.result'), 
					timer: 5 * 1000
				});
			}
			callback({'data': [], 'recordsTotal': 0, 'recordsFiltered': 0});
		}
	})
	.always(function() {
		if (toast) toast.close();
	});
}

function refresh() {
	try {
		if (table) table.ajax.reload();
	}
	catch (e) {
		console.log(e);
	}
}
